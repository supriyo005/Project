//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MitcheelConsoleTest.MitcheelServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ModelMitchellCliams", Namespace="http://schemas.datacontract.org/2004/07/MitcheelClaimService")]
    [System.SerializableAttribute()]
    public partial class ModelMitchellCliams : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AssignedAdjusterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MitcheelConsoleTest.MitcheelServiceReference.ModelLossInfo[] LossInfoesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MitcheelConsoleTest.MitcheelServiceReference.ModelVehicle[] VehiclesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string caimantLastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string claimNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string claimantFirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> lossdateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<byte> status1Field;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AssignedAdjusterID {
            get {
                return this.AssignedAdjusterIDField;
            }
            set {
                if ((this.AssignedAdjusterIDField.Equals(value) != true)) {
                    this.AssignedAdjusterIDField = value;
                    this.RaisePropertyChanged("AssignedAdjusterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MitcheelConsoleTest.MitcheelServiceReference.ModelLossInfo[] LossInfoes {
            get {
                return this.LossInfoesField;
            }
            set {
                if ((object.ReferenceEquals(this.LossInfoesField, value) != true)) {
                    this.LossInfoesField = value;
                    this.RaisePropertyChanged("LossInfoes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MitcheelConsoleTest.MitcheelServiceReference.ModelVehicle[] Vehicles {
            get {
                return this.VehiclesField;
            }
            set {
                if ((object.ReferenceEquals(this.VehiclesField, value) != true)) {
                    this.VehiclesField = value;
                    this.RaisePropertyChanged("Vehicles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string caimantLastName {
            get {
                return this.caimantLastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.caimantLastNameField, value) != true)) {
                    this.caimantLastNameField = value;
                    this.RaisePropertyChanged("caimantLastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string claimNumber {
            get {
                return this.claimNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.claimNumberField, value) != true)) {
                    this.claimNumberField = value;
                    this.RaisePropertyChanged("claimNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string claimantFirstName {
            get {
                return this.claimantFirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.claimantFirstNameField, value) != true)) {
                    this.claimantFirstNameField = value;
                    this.RaisePropertyChanged("claimantFirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> lossdate {
            get {
                return this.lossdateField;
            }
            set {
                if ((this.lossdateField.Equals(value) != true)) {
                    this.lossdateField = value;
                    this.RaisePropertyChanged("lossdate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="status")]
        public System.Nullable<byte> status1 {
            get {
                return this.status1Field;
            }
            set {
                if ((this.status1Field.Equals(value) != true)) {
                    this.status1Field = value;
                    this.RaisePropertyChanged("status1");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ModelLossInfo", Namespace="http://schemas.datacontract.org/2004/07/MitcheelClaimService")]
    [System.SerializableAttribute()]
    public partial class ModelLossInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LossDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ReportedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> iCauseOfLossField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long idField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LossDescription {
            get {
                return this.LossDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.LossDescriptionField, value) != true)) {
                    this.LossDescriptionField = value;
                    this.RaisePropertyChanged("LossDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ReportedDate {
            get {
                return this.ReportedDateField;
            }
            set {
                if ((this.ReportedDateField.Equals(value) != true)) {
                    this.ReportedDateField = value;
                    this.RaisePropertyChanged("ReportedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> iCauseOfLoss {
            get {
                return this.iCauseOfLossField;
            }
            set {
                if ((this.iCauseOfLossField.Equals(value) != true)) {
                    this.iCauseOfLossField = value;
                    this.RaisePropertyChanged("iCauseOfLoss");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ModelVehicle", Namespace="http://schemas.datacontract.org/2004/07/MitcheelClaimService")]
    [System.SerializableAttribute()]
    public partial class ModelVehicle : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DamageDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EngineDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExteriorColorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LicPlateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LicPlateExpDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LicPlateStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MakeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MileageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModelDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModelYearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long idField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DamageDescription {
            get {
                return this.DamageDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DamageDescriptionField, value) != true)) {
                    this.DamageDescriptionField = value;
                    this.RaisePropertyChanged("DamageDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EngineDescription {
            get {
                return this.EngineDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.EngineDescriptionField, value) != true)) {
                    this.EngineDescriptionField = value;
                    this.RaisePropertyChanged("EngineDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExteriorColor {
            get {
                return this.ExteriorColorField;
            }
            set {
                if ((object.ReferenceEquals(this.ExteriorColorField, value) != true)) {
                    this.ExteriorColorField = value;
                    this.RaisePropertyChanged("ExteriorColor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LicPlate {
            get {
                return this.LicPlateField;
            }
            set {
                if ((object.ReferenceEquals(this.LicPlateField, value) != true)) {
                    this.LicPlateField = value;
                    this.RaisePropertyChanged("LicPlate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LicPlateExpDate {
            get {
                return this.LicPlateExpDateField;
            }
            set {
                if ((this.LicPlateExpDateField.Equals(value) != true)) {
                    this.LicPlateExpDateField = value;
                    this.RaisePropertyChanged("LicPlateExpDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LicPlateState {
            get {
                return this.LicPlateStateField;
            }
            set {
                if ((object.ReferenceEquals(this.LicPlateStateField, value) != true)) {
                    this.LicPlateStateField = value;
                    this.RaisePropertyChanged("LicPlateState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MakeDescription {
            get {
                return this.MakeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.MakeDescriptionField, value) != true)) {
                    this.MakeDescriptionField = value;
                    this.RaisePropertyChanged("MakeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Mileage {
            get {
                return this.MileageField;
            }
            set {
                if ((this.MileageField.Equals(value) != true)) {
                    this.MileageField = value;
                    this.RaisePropertyChanged("Mileage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModelDescription {
            get {
                return this.ModelDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ModelDescriptionField, value) != true)) {
                    this.ModelDescriptionField = value;
                    this.RaisePropertyChanged("ModelDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ModelYear {
            get {
                return this.ModelYearField;
            }
            set {
                if ((this.ModelYearField.Equals(value) != true)) {
                    this.ModelYearField = value;
                    this.RaisePropertyChanged("ModelYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Vin {
            get {
                return this.VinField;
            }
            set {
                if ((object.ReferenceEquals(this.VinField, value) != true)) {
                    this.VinField = value;
                    this.RaisePropertyChanged("Vin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MitcheelServiceReference.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddClaimData", ReplyAction="http://tempuri.org/IService1/AddClaimDataResponse")]
        string AddClaimData(string inputXml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddClaimData", ReplyAction="http://tempuri.org/IService1/AddClaimDataResponse")]
        System.Threading.Tasks.Task<string> AddClaimDataAsync(string inputXml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetClaims", ReplyAction="http://tempuri.org/IService1/GetClaimsResponse")]
        MitcheelConsoleTest.MitcheelServiceReference.ModelMitchellCliams[] GetClaims();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetClaims", ReplyAction="http://tempuri.org/IService1/GetClaimsResponse")]
        System.Threading.Tasks.Task<MitcheelConsoleTest.MitcheelServiceReference.ModelMitchellCliams[]> GetClaimsAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : MitcheelConsoleTest.MitcheelServiceReference.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<MitcheelConsoleTest.MitcheelServiceReference.IService1>, MitcheelConsoleTest.MitcheelServiceReference.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string AddClaimData(string inputXml) {
            return base.Channel.AddClaimData(inputXml);
        }
        
        public System.Threading.Tasks.Task<string> AddClaimDataAsync(string inputXml) {
            return base.Channel.AddClaimDataAsync(inputXml);
        }
        
        public MitcheelConsoleTest.MitcheelServiceReference.ModelMitchellCliams[] GetClaims() {
            return base.Channel.GetClaims();
        }
        
        public System.Threading.Tasks.Task<MitcheelConsoleTest.MitcheelServiceReference.ModelMitchellCliams[]> GetClaimsAsync() {
            return base.Channel.GetClaimsAsync();
        }
    }
}
